{
  "openapi": "3.0.0",
  "info": {
    "title": "Book Management API",
    "description": "API for managing books in a library system.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/RETMUJago/Api_Praktikum/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://events.hmti.unkhair.ac.id/api",
      "description": "ENDPOINT"
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "description": "Returns a list of all registered books",
        "operationId": "getBooks",
        "responses": {
          "200": {
            "description": "A list of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Add a new book",
        "description": "Creates a new book entry",
        "operationId": "addBook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBook"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get a book by ID",
        "description": "Returns a single book by its ID",
        "operationId": "getBookById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the book to retrieve",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update a book",
        "description": "Updates an existing book entry",
        "operationId": "updateBook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the book to update",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBook"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete a book",
        "description": "Deletes a book by its ID",
        "operationId": "deleteBook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the book to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Book deleted successfully"
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "required": [
          "author",
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the book",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title of the book"
          },
          "author": {
            "type": "string",
            "description": "Author of the book"
          },
          "description": {
            "type": "string",
            "description": "Description of the book"
          }
        }
      },
      "NewBook": {
        "required": [
          "author",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the book"
          },
          "author": {
            "type": "string",
            "description": "Author of the book"
          },
          "description": {
            "type": "string",
            "description": "Description of the book"
          }
        }
      }
    }
  }
}